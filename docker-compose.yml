services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  mongodb:
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - /data/db
    healthcheck:
      test: ["CMD", "mongosh","--quiet","127.0.0.1/test","--eval","'quit( db.runCommand({ ping: 1 }).ok ? 0 : 2 )'"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
  rabbitmq:
    image: rabbitmq:4-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 5s
      retries: 5
  auction-svc:
    image: darabjavaid/auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;Database=auctions;User Id=postgres;Password=postgrespw;
      - IdentityServiceUrl=http://identity-svc
      - RabbitMq__Host=rabbitmq
      - Kestrel__Endpoints__Grpc__Protocols=Http2      
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80      
    ports:
      - 7001:80
      - 7777:7777
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  search-svc:
    image: darabjavaid/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__MongoDBConnection=mongodb://mongodb:27017
      - AuctionServiceURL=http://auction-svc
      - RabbitMq__Host=rabbitmq
    ports:
      - 7002:80
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  identity-svc:
    image: darabjavaid/identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;Database=identity;User Id=postgres;Password=postgrespw;
    ports:
      - 5001:80
    depends_on:
      postgres:
        condition: service_healthy
  gateway-svc:
    image: darabjavaid/gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 6001:80
  bid-svc:
    image: darabjavaid/bid-svc:latest
    build:
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__BidDbConnection=mongodb://mongodb:27017
      - IdentityServiceUrl=http://identity-svc
      - GrpcAuction=http://auction-svc:7777
      - RabbitMq__Host=rabbitmq
    ports:
      - 7003:80
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy